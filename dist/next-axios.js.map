{"version":3,"sources":["next-axios.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-axios.js","sourcesContent":["(function() {\n  var global = global || window || self || Function('return this')();\n  var nx = global.nx || require('next-js-core2');\n  var axios = global.axios || require('axios');\n  var ERROR_MSG = '[nx.Axios]: Please implment the method!';\n  var contentType = nx.contentType || require('next-content-type');\n  var nxStubSingleton = nx.stubSingleton || require('next-stub-singleton');\n  var CancelToken = axios.CancelToken;\n\n  var NxAxios = nx.declare('nx.Axios', {\n    statics: nx.mix(null, nxStubSingleton()),\n    methods: {\n      axios: axios,\n      init: function() {\n        this.setDefaults();\n        this.setRequestInterceptor();\n        this.setResponseInterceptor();\n      },\n      setDefaults: function(inOptions) {\n        var headers = this.headers();\n        var options = inOptions || {\n          baseURL: './',\n          timeout: 30000,\n          headers: {\n            common: headers,\n            get: headers,\n            post: headers,\n            delete: headers,\n            put: headers,\n            patch: headers,\n            head: headers\n          }\n        };\n        nx.mix(axios.defaults, options);\n      },\n      setRequestInterceptor: function() {},\n      setResponseInterceptor: function() {\n        var self = this;\n        axios.interceptors.response.use(\n          function(response) {\n            return self.success(response);\n          },\n          function(error) {\n            self.error(error);\n            // nx.error(error);\n          }\n        );\n      },\n      headers: function() {\n        return { 'Content-Type': contentType('json') };\n      },\n      success: function(inResponse) {\n        return this.toData(inResponse);\n      },\n      error: function(inError) {\n        console.log(ERROR_MSG, inError);\n      },\n      toData: function(inResponse) {\n        return inResponse;\n      },\n      isSuccess: function(inResponse) {\n        return !inResponse.errorCode;\n      },\n      request: function(inOptions) {\n        var resource = inOptions.resource;\n        var source = CancelToken.source();\n        var additional = resource ? { cancelToken: source.token } : null;\n        var options = nx.mix(additional, inOptions);\n        // resource:[ context, path ]\n        resource && nx.set(resource[0], resource[1], { destroy: source.cancel });\n        return axios.request(options);\n      },\n      'get,delete,head,post,put,patch': function(inMethod) {\n        return function(inName, inData, inConfig) {\n          return axios[inMethod](inName, inData, inConfig);\n        };\n      }\n    }\n  });\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = NxAxios;\n  }\n})();\n"]}